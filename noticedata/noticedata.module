<?php
/**
 * Implementation of hook_menu().
 */
function noticedata_menu() {
  try{
 $items = array();

 $items['noticedatadisplay'] = array(
    'title' => 'Notice data feed from the Gazette REST API',
    'page callback' => 'noticedataviacurl',
    'type' => MENU_CALLBACK,
    'access callback'   =>  true,
    );
 
   /* $items['test'] = array(
    'title' => 'Notice data feed from the Gazette REST API',
    'page callback' => 'testdata',
    'type' => MENU_CALLBACK,
    'access callback'   =>  true,
    ); */
   return $items;
   }catch (Exception $ex) {
    watchdog_exception('noticedata_menu', $ex);
  } 
}


function noticedataviacurl(){
	try{
	
	drupal_add_css(drupal_get_path('module', 'noticedata') .'/noticedatastyle.css');
	
	$output = "";	
	if(!isset($_GET['page'])) $resultpage=1;
	else $resultpage = $_GET['page']+1;
	//print('page >>>'.$resultpage);
   	
  	$url = "https://www.thegazette.co.uk/all-notices/notice/data.json";
  	$dataArray = ['results-page' => $resultpage];  
    $data = http_build_query($dataArray);  
    $getUrl = $url."?".$data;
  	//print('getUrl >>>'.$getUrl);
  	
    $ch = curl_init();
	curl_setopt($ch, CURLOPT_URL, $getUrl);
	curl_setopt($ch, CURLOPT_TIMEOUT, 30);
	curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
	curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);
	$result = curl_exec($ch);
	//print_r($result);
	
	if(!$result){
        die('Error: "' . curl_error($ch) . '" - Code: ' . curl_errno($ch));
    }
	$res = json_decode($result,true);
	//print_r($res['entry']);
 	
	$totalItems = $res['f:total']; 
	
	// Prepare table header
    $header = array('ID','Title', 'Publish date', 'Content');
	$rows = array();
	pager_default_initialize($totalItems, 10);
	$k=$res['f:page-start'];
	foreach($res['entry'] as $vals) {
  
      $hreflink = $vals['id']; 
      $pubdate = strtotime($vals['published']);
      $publisheddate = date("d F Y",$pubdate);
      
		 $rows[] = array(
		  $k,
		  '<a href='.$hreflink.' target="_blank">'.$vals['title'].'</a>',	     
	      $publisheddate,
	      $vals['content']
	    );
	    $k++;
	}
	
  // Output of table with the paging
  $output = theme_table(
    array(
      "header" => $header,
      "rows" => $rows,
      "attributes" => array('id' => 'datafeed'),
      "sticky" => true, // Table header will be sticky
      "caption" => "",
      "colgroups" => array(),
      "empty" => t("Table has no row!") // The message to be displayed if table is empty
    )
  ).theme("pager");
  return $output; 
 
	}catch (Exception $ex) {
		watchdog_exception('noticedataviacurl', $ex);
	}
}
 

/*
function testdata(){
	try{ 
	
	 $header = array('Name');
  $zodiac = array(
    'Aquarius',
    'Pisces',
    'Aries',
    'Taurus',
    'Gemini',
    'Cancer',
    'Leo',
    'Virgo',
    'Libra',
    'Scorpio',
    'Sagittarius',
    'Capricorn',
  );

  $zodiac_piece = _return_pager_for_array($zodiac, 3);

   foreach ($zodiac_piece as $item) {
    $rows[] = array($item);
  }

  // Create table and pager
  $element['table'] = array(
    '#theme' => 'table',
    '#header' => $header,
    '#rows' => $rows,
    '#empty' => t('There is no data available.'),
  );

  $element['pager'] = array(
    '#theme' => 'pager',
  );

  return $element;
	
	
	}catch (Exception $ex) {
		watchdog_exception('testdata', $ex);
	}
} */


/* function _return_pager_for_array($items, $num_page) {
  // Get total items count
  //$total = $items;
  // Get the number of the current page
  //$current_page = pager_default_initialize($total, $num_page);
  // Split an array into chunks
  //$chunks = array_chunk($items, $num_page);
  // Return current group item
  //$current_page_items = $chunks[$current_page];

  //return $current_page_items;
} */